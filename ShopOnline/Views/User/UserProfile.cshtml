@model Model.EF.Client

@{
    ViewBag.Title = "UserProfile";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<div class="container-fluid">
    <div  class="row d-flex justify-content-center">
        <div style="background-color:antiquewhite" class="col-xl-8 ">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h1 class="text-center">Thông tin cá nhân</h1>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.id)

                <div class="form-group">
                    @Html.Label("Họ và tên", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Ngày sinh", htmlAttributes: new { @class = "control-label col-md-2 " })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.dob, "{0:d/MM/yyyy}", new { @class = "input-large" })
                        @Html.ValidationMessageFor(model => model.dob, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Giới tính", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="btn-group" data-toggle="buttons">

                        <label class="btn btn-primary active">
                            @Html.RadioButtonFor(m => m.gender, "true") Male
                        </label>
                        <label class="btn btn-primary active">
                            @Html.RadioButtonFor(m => m.gender, "false") Female
                        </label>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Số điện thoại", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control"  } })
                        @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Địa chỉ", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10 d-flex justify-content-center">
                        <input type="submit" value="Save" class="btn btn-primary" />
                    </div>
                </div>
            </div>
            }
        </div>
    </div>
</div>



